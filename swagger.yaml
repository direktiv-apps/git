swagger: "2.0"
info:
  description: Git function including Github CLI
  title: git
  version: "1.0"
  x-direktiv-meta:
    container: gcr.io/direktiv/apps/git
    maintainer: |-
      [direktiv.io](https://www.direktiv.io) 
    issues: https://github.com/direktiv-apps/git/issues
    url: https://github.com/direktiv-apps/git  
    categories:
    - build
    license: |-
      [Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)
    long-description: >-
      This function has Git and the Github CLI installed. 
      The use of the Github CLI requires the `pat` parameter to be set with a valid personal access token. 
      The minimum scope for this token is: "repo", "read:org".
      
      To use cloned repositories in later states within the flow they can be written to the out directory, e.g. 
      git clone https://github.com/direktiv/direktiv.git out/instance/direktiv.tar.gz

      A [Github changelog generator](https://github.com/github-changelog-generator/github-changelog-generator) is available on this image.
consumes:
- application/json
produces:
- application/json
schemes:
- http
paths:
  /: 
    delete:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          description: |
            On cancel Direktiv sends a DELETE request to
            the action with id in the header
      x-direktiv:
        cancel: echo 'cancel {{ .DirektivActionID }}'
      responses:
        200:
    post:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          default: development
          description: |
            direktiv action id is an UUID. 
            For development it can be set to 'development'
        - name: Direktiv-TempDir
          in: header
          type: string
          default: /tmp
          description: |
            direktiv temp dir is the working directory for that request
            For development it can be set to e.g. '/tmp'
        - name: body
          in: body
          schema:
            type: object
            properties:
              pat:
                type: string
                description: Used for Github CLI to authenticate (PAT, Personal Access Token).
              files:
                type: array
                items:
                  $ref: '#/definitions/direktivFile'
                description: File to create before running commands.
              commands:
                type: array
                description: Array of commands.
                items:
                  type: object
                  properties:
                    command:
                      type: string
                      description: Command to run
                      example: git clone https://github.com/direktiv/direktiv.git
                    silent: 
                      type: boolean
                      description: If set to false the command will not print output to logs.
                      default: false
                    print: 
                      type: boolean
                      description: If set to false the command will not print the full command with arguments to logs.
                      default: true
                    continue: 
                      type: boolean
                      description: Stops excecution if command fails, otherwise proceeds with next command 
      # direktiv code generation is configured here
      x-direktiv-function: |-
        functions:
        - id: git
          image: gcr.io/direktiv/apps/git:1.0
          type: knative-workflow
      x-direktiv-examples:
        - title: Basic
          content: |-
            - id: git
              type: action
              action:
                function: git
                input: 
                  commands:
                  - command: git clone --depth 1 https://github.com/direktiv/direktiv.git
        - title: Store Cloned Repository
          content: |-
            - id: git
              type: action
              action:
                function: git
                input: 
                  commands:
                  - command: git clone --depth 1 https://github.com/direktiv/direktiv.git out/instance/direktiv.tar.gz
              transition: readdir
            - id: readdir
              type: action
              action:
                function: git
                files:
                - key: direktiv.tar.gz
                  scope: instance
                  type: tar.gz
                  as: direktiv
                input:
                  commands:
                  - command: git -C direktiv reflog
        - title: Private Clone Github
          content: |-
            - id: git
              type: action
              action:
                secrets: ["gitPAT"]
                function: git
                input: 
                  pat: jq(.secrets.gitPAT)
                  commands:
                  - command: gh repo clone jensg-st/private-test
        - title: Private Clone
          content: |-
            - id: git
              type: action
              action:
                secrets: ["gitPAT"]
                function: git
                input: 
                  commands:
                  - command: git clone https://user:jq(.secrets.gitPAT)@github.com/jensg-st/private-test.git
      x-direktiv-secrets:
        - name: gitPAT
          description: The personal access token (PAT) for Github CLI.
      x-direktiv:
        cmds:
        - action: exec
          exec: /prep-git.sh {{ .Pat }}
        - action: foreach
          loop: .Commands
          exec: '{{ .Item.Command }}'
          silent: '{{ .Item.Silent }}'
          print: '{{ .Item.Print }}'
          continue: '{{ .Item.Continue }}'
          env: ["GITHUB_TOKEN={{ .Body.Pat }}", "CHANGELOG_GITHUB_TOKEN={{ .Body.Pat }}"]
        output: |
          {
            "git": {{ index . 1 | toJson }}
          }
      x-direktiv-errors:
        io.direktiv.command.error: Command execution failed
        io.direktiv.output.error: Template error for output generation of the service
        io.direktiv.ri.error: Can not create information object from request
      responses:
        200:
          description: List of executed commands.
          examples:
            git:
            - result: 
              success: true
          schema:
            type: object
            properties:
              git:
                type: array
                items:
                  type: object
                  required:
                  - success
                  - result
                  properties:
                    success:
                      type: boolean
                    result:
                      additionalProperties: {}
        default:
          description: generic error response
          headers:
            Direktiv-ErrorCode:
              type: string
            Direktiv-ErrorMessage:
              type: string
          schema:
            $ref: "#/definitions/error"
definitions:
  direktivFile:
    type: object
    x-go-type:
      type: DirektivFile
      import:
        package: github.com/direktiv/apps/go/pkg/apps 
  error:
    type: object
    required:
      - errorCode
      - errorMessage
    properties:
      errorCode:
        type: string
      errorMessage:
        type: string
